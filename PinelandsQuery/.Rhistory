barplot(gtab2,legend=T)
#visualizing two catergorical variables (contingency table gtab2) side by side, stacked barplot
barplot(gtab2,legend=T,main='Gender by Grammy Winner',ylab='Counts')
#visualizing two catergorical variables (contingency table gtab2) side by side, stacked barplot
barplot(gtab2,legend=T,main='Gender by Grammy Winner',ylab='Counts',beside=T)
#stacked plot for conditional probability within each gender
barplot(gtab2,2)
#stacked plot for conditional probability within each gender
barplot(prop.table(gtab2,2))
#stacked plot for conditional probability within each gender
barplot(prop.table(gtab2,2),beside=T)
#stacked plot for conditional probability within each gender
barplot(prop.table(gtab2,2))
#assign gtab to table of Grammy column in acl data frame
gtab <- table(acl$Grammy)
#proportion table for gtab data frame
prop.table(gtab)
#contigency table for columns Grammy and Gender of acl Dataframe
gtab2 <- table(acl$Grammy,acl$Gender)
#show gtab2
gtab2
#proportion for contingency table gtab2 across the contingency table rows
prop.table(gtab2,1)
#contigency table for columns Grammy and Gender of acl Dataframe
gtab2 <- prop.table(acl$Grammy,acl$Gender)
#contigency table for columns Grammy and Gender of acl Dataframe
gtab2 <- table(acl$Grammy,acl$Gender)
#show gtab2
prop.table(gtab2)
#show gtab2
gtab2
#proportion for contingency table gtab2 across the contingency table rows
prop.table(gtab2,1)
#proportion for contingency table gtab2 across the contingency table columns
prop.table(gtab2,2)
#barplot of gtab vector table
barplot(gtab,main='ACL Grammy Winners',xlab='Grammy Winners',ylab='Counts')
#visualizing two catergorical variables (contingency table gtab2) side by side, stacked barplot
barplot(gtab2,legend=T,main='Gender by Grammy Winner',ylab='Counts',beside=T)
#stacked plot for conditional probability within each gender
barplot(prop.table(gtab2,2))
#prelab
older <- acl[acl$Age>=30,]
View(older)
#create tables of marginal distribution
genre <- table(older$Genre)
genre
gender <- table(older$Gender)
gender
#Create contingency table
twoway <- table(older$Genre,older$Gender)
twoway
#Create contingency table
twoway <- table(older$Gender,older$Genre)
twoway
#Visualize contingency table
barplot(twoway,legend=T,beside=T)
#Visualize contingency table
barplot(twoway,legend=T,beside=T)
#Probability of genre
prop.table(genre)
#probability of each genre being played given the artists gender
prop.table(twoway,1)
#lab
#subset data males only
males <- acl[acl$Gender=M,]
#lab
#subset data males only
males <- acl[acl$Gender='M',]
#lab
#subset data males only
males <- acl[acl$Gender==M,]
#lab
#subset data males only
males <- acl[acl$Gender=='M',]
View(males)
#marginal tables for Genre and Grammy
table(males$Genre)
table(males$Grammy)
genregrammy <- table(males$Genre,males$Grammy)
genregrammy
grammygenre <- table(males$Grammy,males$Genre)
rm(genregrammy)
grammygenre
#visualize grammygenre
barplot(grammygenre,legend=T,besides=T)
#visualize grammygenre
barplot(grammygenre,legend=T,beside=T)
#visualize grammygenre
barplot(grammygenre,legend=T,beside=T)
#probability of winning a grammy
prop.table(males$Grammy)
#probability of winning a grammy
prop.table(Grammy)
#probability of winning a grammy
table(Grammy)
#probability of winning a grammy
table(males$Grammy)
prop.table(males$Grammy)
#probability of winning a grammy
prop.table(males)
table(males$Grammy)
grammygenre
#probability of winning a grammy, given the artists genre
prop.table(grammygenre,2)
#problemset
#subset for 100k FB likes
hundredk <- acl[acl$Facebook.100k=1,]
#problemset
#subset for 100k FB likes
hundredk <- acl[acl$Facebook.100k==1,]
View(hundredk)
table(hundredk$Age.Group)
prop.table(hundredk$Age.Group)
agegroup <- table(hundredk$Age.Group)
prop.table(agegroup)
agegroup <- hundredk[hundredk$Age.Group,]
View(agegroup)
View(agegroup)
rm(agegroup)
agegroup <- hundredk[hundredk$Age.Group]
View(agegroup)
agegroup <- hundredk[hundredk$Age.Group,]
View(agegroup)
rm(agegroup)
table(hundredk$Age.Group)
table(acl$Age.Group)
proptable(acl$Age.Group,acl$Facebook.100k==1)
prop.table(acl$Age.Group,acl$Facebook.100k==1)
table(acl$Facebook.100k)
table(hundredk$Age.Group)
agefb <- table(acl$Facebook.100k,acl$Age.Group)
prop.table(agefb,2)
3+4
sqrt(25)
library(SDSFoundations)
BikeData
bike <- BikeData
View(bike)
View(bike)
# Find the number of students in the dataset
table(bike$student)
# Pull out student data into a new dataframe
student <-bike[bike$student==1,]
# Find how often the students ride, using the new dataframe
table(student$cyc_freq)
# Create a vector for the distance variable
distance <-student$distance
# Find average distance ridden
mean(distance)
View(student)
View(student)
name(student)
#male rider data frame
males <- bike[bike$gender== 'M',]
View(males)
maletimes <- males[males$time]
maletimes <- males[males$time== , ]
maletimes <- males$times
maletimes <- males$time
mean(maletimes)
dailyriders <- bike[bike$cyc_freq== 'Daily', ]
View(dailyriders)
View(dailyriders)
dailyage <- dailyriders$age
mean(dailyage)
table(dailyriders$gender)
femaledailyriders <- dailyriders[dailyriders$gender== 'F', ]
View(femaledailyriders)
View(femaledailyriders)
femaledailyridersage <- femaledailyriders$age
mean(femaledailyridersage)
maledailyriders <- dailyriders[dailyriders$gender== 'M',]
maledailyridersage <- maledailyriders$age
mean(maledailyridersage)
maledailyriders$age >= 30
View(maledailyriders)
maledailyriders30up <- maledailyridersage[maledailyridersage$age>=30]
maledailyriders30up <- maledailyridersage[maledailyridersage$age>=30,]
maledailyriders30up <- maledailyriders[maledailyriders$age>=30,]
View(maledailyriders30up)
View(maledailyriders30up)
mean(dailyage)
mean(femaledailyridersage)
mean(maledailyridersage)
m
clear
library("SDSFoundations", lib.loc="~/anaconda3/lib/R/library")
animaldata <- AnimalData
View(animaldata)
View(animaldata)
head(animaldata)
table(animaldata$Sex)
plot(animaldata$Sex)
plot(animaldata$Sex,main='Bar Chat of Animal Genders', xlab='Animal Gender', ylab='Frequency')
plot(animaldata$Sex,main='Bar Chart of Animal Genders', xlab='Animal Gender', ylab='Frequency')
hist(animaldata$Age.Intake)
hist(animaldata$Age.Intake,main='Histogram of Intake Ages',xlab='Age at Intake')
femaleage <- animaldata$Age.Intake=='Female'
femaleage <- animaldata$Age.Intake[animaldata$Sex=='Female']
femaleage
remove(femaleage)
femaleage <- animaldata$Age.Intake[animaldata$Sex=='Female']
maleage <-animaldata$Age.Intake[animaldata$Sex=='Male']
hist(femaleage)
hist(femaleage,main='Histogram of Female Intake Ages',xlab='Female Ages')
hist(femaleage,main='Histogram of Female Intake Ages',xlab='Female Age at Intake')
hist(maleage,=main'Histogram of Male Intake Ages,xlab='Male Age at Intake')
hist(maleage,main='Histogram of Male Intake Ages,xlab='Male Age at Intake')
hist(maleage,main='Histogram of Male Intake Ages',xlab='Male Age at Intake')
hist(maleage,main='Histogram of Male Intake Ages',xlab='Male Age at Intake',breaks=5)
hist(maleage,main='Histogram of Male Intake Ages',xlab='Male Age at Intake',breaks=10)
hist(maleage,main='Histogram of Male Intake Ages',xlab='Male Age at Intake',breaks=15)
which.max(maleage)
max(maleage)
max(femaleage)
which(animalage$Age.Intake==17)
which(animaldata$Age.Intake==17)
animaldata(415,)
animaldata[415,]
mean(animaldata$Age.Intake)
median(animaldata$Age.Intake)
sd(animaldata@Age.Intake)
sd(animaldata$Age.Intake)
fivenum(animaldata$Age.Intake)
getwd
getwd()
install.packages("tidyr")
install.packages("dplyr")
install.packages("ggplot2")
library(tidyr)
library(dplyr)
library(ggplot2)
?tidyr
library(readxl)
gcfield1 <- read_excel("Rutgers/Research/HMF Meadow Vegetation Data/2017 Vegetation Data/Tidyr Data/gcfield1.csv")
View(gcfield1)
library(readxl)
gcfield1 <- read_excel("Rutgers/Research/HMF Meadow Vegetation Data/2017 Vegetation Data/Tidyr Data/gcfield1.csv")
View(gcfield1)
gcfield1 <- read.table("~/Rutgers/Research/HMF Meadow Vegetation Data/2017 Vegetation Data/Tidyr Data/gcfield1.xlsx", header=TRUE, quote="\"")
View(gcfield1)
library(readxl)
gcfield1 <- read_excel("Rutgers/Research/HMF Meadow Vegetation Data/2017 Vegetation Data/Tidyr Data/gcfield1.csv")
View(gcfield1)
gcfield1 <- read.csv("~/Rutgers/Research/HMF Meadow Vegetation Data/2017 Vegetation Data/Tidyr Data/gcfield1.csv")
View(gcfield1)
rm(gcfield1)
gcfield1 <- read.csv("~/Rutgers/Research/HMF Meadow Vegetation Data/2017 Vegetation Data/Tidyr Data/gcfield1.csv")
View(gcfield1)
library(tidyr)
#gather subplots into 1 single column
gathergcfield1 <- gcfield1 %>% gather(Subplot, Groundcover, F1O1:X.3)
View(gathergcfield1)
View(gathergcfield1)
rm(gathergcfield1)
#gather subplots into 1 single column
gatherF1O1 <- gcfield1 %>% gather(Subplot, Percent Cover, F1O1)
#gather subplots into 1 single column
gatherF1O1 <- gcfield1 %>% gather(Subplot, Percent Cover, F1O1:F1O1)
#gather subplots into 1 single column
gatherF1O1 <- gcfield1 %>% gather(Subplot, PercentCover, F1O1)
View(gatherF1O1)
View(gatherF1O1)
rm(gatherF1O1)
#gather subplots into 1 single column
gatherF1O1 <- gcfield1 %>% gather(Subplot, PercentCover, F1O1)
View(gatherF1O1)
View(gatherF1O1)
rm(gatherF1O1)
#gather subplots into 1 single column
gatherF1O1 <- gcfield1 %>% gather(Subplot, PercentCover, F1O1,X,Plot)
View(gatherF1O1)
View(gatherF1O1)
rm(gatherF1O1)
rm(gcfield1)
gcfield1 <- read.csv("~/Rutgers/Research/HMF Meadow Vegetation Data/2017 Vegetation Data/Tidyr Data/gcfield1.csv")
View(gcfield1)
gatherF1O1 <- gcfield1 %>% gather(Subplot, PercentCover, F1O1.1:F1O1.4)
View(gatherF1O1)
View(gatherF1O1)
rm(gatherF1O1)
gatherF1 <- gcfield1 %>% gather(Plot.rmSubplot, PercentCover, F1O1.1:F1C4.4)
View(gatherF1)
View(gatherF1)
rm(gatherF1)
gatherF1 <- gcfield1 %>% gather(Plot.Subplot, PercentCover, F1O1.1:F1C4.4)
View(gcfield1)
gatherF1Zeros <- gcfield1 %>% gather(Plot.Subplot, PercentCover, F1O1.1:F1C4.4)
rm(gatherF1)
View(gatherF1Zeros)
View(gatherF1Zeros)
gatherF1 <- gatherF1Zeros [gatherF1Zeros$PercentCover>0.0]
gatherF1 <- gatherF1Zeros[gatherF1Zeros$PercentCover>0.0]
gatherF1 <- gatherF1Zeros[gatherF1Zeros$PercentCover>'0.0']
gatherF1 <- gatherF1Zeros[gatherF1Zeros$PercentCover>,0.0]
gatherF1 <- gatherF1Zeros[gatherF1Zeros$PercentCover>'',0.0]
View(gatherF1)
View(gatherF1)
rm(gatherF1)
gatherF1 <- gatherF1Zeros[gatherF1Zeros$PercentCover>0.0,]
View(gatherF1)
View(gatherF1)
gatherF1$newcolumn<-"YearSampled"
gatherF1$newcolumn<-"1995"
?colnames
colnames(newcolumn) <- YearSampled
colnames(gatherF1) <- YearSampled
colnames(gatherF1)[colnames(data)=="newcolumn"] <- "YearSampled"
colnames(gatherF1)[colnames(gatherF1)=="newcolumn"] <- "YearSampled"
?write.csv
#save dataframe gatherF1 as .csv
write.csv(gatherF1, file = gathergcfield1)
#save dataframe gatherF1 as .csv
write.csv(gatherF1, file = "gathergcfield1.csv")
write
rm(gatherF1)
rm(gatherF1Zeros)
rm(gcfield1)
gcfield1 <- read.csv("~/Rutgers/Research/HMF Meadow Vegetation Data/2017 Vegetation Data/Tidyr Data/gcfield1.csv")
View(gcfield1)
#Gather old columns F1O1.1toF1C4.4 under new column 'Plot.Subplot' and placing their values in new column 'PercentCover'
gatherF1Zeros <- gcfield1 %>% gather(Plot.Subplot, PercentCover, F1O1.1:F1C4.4)
View(gatherF1Zeros)
View(gatherF1Zeros)
#create new data frame 'gatherF1' from old dataframe gatherF1Zero's with all obs. greater than 0.0
gatherF1 <- gatherF1Zeros[gatherF1Zeros$PercentCover>0.0,]
View(gatherF1)
#create a new column in gatherF1 dataframe where all cells equal 1995
gatherF1$newcolumn<-"1995"
#rename column 'newcolumn' in dataframe gatherF1 to 'YearSampled'
colnames(gatherF1)[colnames(gatherF1)=="newcolumn"] <- "YearSampled"
#save dataframe gatherF1 as .csv
write.csv(gatherF1, file = "gathergcfield1.csv")
gcfield2 <- read.csv("~/Rutgers/Research/HMF Meadow Vegetation Data/2017 Vegetation Data/Tidyr Data/gcfield2.csv")
View(gcfield2)
#Gather old columns F2O1.1toF2C4.4 under new column 'Plot.Subplot' and placing their values in new column 'PercentCover'
gatherF2Zeros <- gcfield2 %>% gather(Plot.Subplot, PercentCover, F2O1.1:F2C4.4)
#Gather old columns F2O1.1toF2C4.4 under new column 'Plot.Subplot' and placing their values in new column 'PercentCover'
gatherF2Zeros <- gcfield2 %>% gather(Plot.Subplot, PercentCover, F2O1.1:F2C4.4)
View(gcfield2)
#Gather old columns F2O1.1toF2C4.4 under new column 'Plot.Subplot' and placing their values in new column 'PercentCover'
gatherF2Zeros <- gcfield2 %>% gather(Plot.Subplot, PercentCover, F2O1.1:F2C4.4)
#Gather old columns F2O1.1toF2C4.4 under new column 'Plot.Subplot' and placing their values in new column 'PercentCover'
gatherF2Zeros <- gcfield2%>%gather(Plot.Subplot, PercentCover, F2O1.1:F2C4.4)
#Gather old columns F2O1.1toF2C4.4 under new column 'Plot.Subplot' and placing their values in new column 'PercentCover'
gatherF2Zeros <- gcfield2 %>% gather(Plot.Subplot, PercentCover, F2O1.1:F2C4.4)
library(tidyr)
#Gather old columns F2O1.1toF2C4.4 under new column 'Plot.Subplot' and placing their values in new column 'PercentCover'
gatherF2Zeros <- gcfield2 %>% gather(Plot.Subplot, PercentCover, F2O1.1:F2C4.4)
rm(gcfield2, gatherF2Zeros)
#Gather old columns F2O1.1toF2C4.4 under new column 'Plot.Subplot' and placing their values in new column 'PercentCover'
gatherF2Zeros <- gcfield2 %>% gather(Plot.Subplot, PercentCover, F2O1.1:F2C4.4)
gcfield2 <- read.csv("~/Rutgers/Research/HMF Meadow Vegetation Data/2017 Vegetation Data/Tidyr Data/gcfield2.csv")
View(gcfield2)
#Gather old columns F2O1.1toF2C4.4 under new column 'Plot.Subplot' and placing their values in new column 'PercentCover'
gatherF2Zeros <- gcfield2 %>% gather(Plot.Subplot, PercentCover, F2O1.1:F2C4.4)
View(gatherF2Zeros)
#create new data frame 'gatherF1' from old dataframe gatherF1Zero's with all obs. greater than 0.0
gatherF2 <- gatherF2Zeros[gatherF2Zeros$PercentCover>0.0,]
View(gatherF2)
#create a new column in gatherF1 dataframe where all cells equal 1995
gatherF2$newcolumn<-"2017"
#rename column 'newcolumn' in dataframe gatherF1 to 'YearSampled'
colnames(gatherF2)[colnames(gatherF2)=="newcolumn"] <- "YearSampled"
#save dataframe gatherF1 as .csv
write.csv(gatherF2, file = "gathergcfield1.csv")
#save dataframe gatherF1 as .csv
write.csv(gatherF2, file = "gathergcfield2.csv")
#create a new column in gatherF1 dataframe where all cells equal 1995
gatherF1$newcolumn<-"2017"
#save dataframe gatherF1 as .csv
write.csv(gatherF2, file = "gathergcfield2.csv")
gcfield1 <- read.csv("~/Rutgers/Research/HMF Meadow Vegetation Data/2017 Vegetation Data/Tidyr Data/gcfield1.csv")
View(gcfield1)
#Gather old columns F1O1.1toF1C4.4 under new column 'Plot.Subplot' and placing their values in new column 'PercentCover'
gatherF1Zeros <- gcfield1 %>% gather(Plot.Subplot, PercentCover, F1O1.1:F1C4.4)
#create new data frame 'gatherF1' from old dataframe gatherF1Zero's with all obs. greater than 0.0
gatherF1 <- gatherF1Zeros[gatherF1Zeros$PercentCover>0.0,]
#create a new column in gatherF1 dataframe where all cells equal 1995
gatherF1$newcolumn<-"2017"
#rename column 'newcolumn' in dataframe gatherF1 to 'YearSampled'
colnames(gatherF1)[colnames(gatherF1)=="newcolumn"] <- "YearSampled"
#save dataframe gatherF1 as .csv
write.csv(gatherF1, file = "gathergcfield1.csv")
View(gatherF1)
View(gatherF1)
#Gather old columns F1O1.1toF1C4.4 under new column 'Plot.Subplot' and placing their values in new column 'PercentCover'
gatherF1Zeros <- gcfield1 %>% gather(Plot.Subplot, PercentCover, F1O1.1:F1C4.4)
#create new data frame 'gatherF1' from old dataframe gatherF1Zero's with all obs. greater than 0.0
gatherF1 <- gatherF1Zeros[gatherF1Zeros$PercentCover>0.0,]
gcfield1 <- read.csv("~/Rutgers/Research/HMF Meadow Vegetation Data/2017 Vegetation Data/Tidyr Data/gcfield1.csv")
View(gcfield1)
#Gather old columns F1O1.1toF1C4.4 under new column 'Plot.Subplot' and placing their values in new column 'PercentCover'
gatherF1Zeros <- gcfield1 %>% gather(Plot.Subplot, PercentCover, F1O1.1:F1C4.4)
library(tidyr)
#Gather old columns F1O1.1toF1C4.4 under new column 'Plot.Subplot' and placing their values in new column 'PercentCover'
gatherF1Zeros <- gcfield1 %>% gather(Plot.Subplot, PercentCover, F1O1.1:F1C4.4)
#create new data frame 'gatherF1' from old dataframe gatherF1Zero's with all obs. greater than 0.0
gatherF1 <- gatherF1Zeros[gatherF1Zeros$PercentCover>0.0,]
#create a new column in gatherF1 dataframe where all cells equal 1995
gatherF1$newcolumn<-"2017"
#rename column 'newcolumn' in dataframe gatherF1 to 'YearSampled'
colnames(gatherF1)[colnames(gatherF1)=="newcolumn"] <- "YearSampled"
View(gatherF1Zeros)
View(gatherF1Zeros)
View(gatherF1)
View(gatherF1)
getwd
getwd
getwd()
#create a new column in gatherF1 dataframe where all cells equal 1995
gatherF1$Banana<-"2017"
gcfield1$F1C3.4
sum(gatherF1$species)
stdev(gatherF1$species)
stddev(gatherF1$species)
install.packages("vegan")
library(vegan)
install.packages("vegan")
install.packages("vegan")
install.packages()
library(vegan)
library(vegan)
install.packages(vegan)
install.packages("vegan")
install.packages("vegan")
install.packages("vegan")
library(vegan)
library(vegan)
install.packages("vegan")
field1gc <- read.csv("~/Rutgers/Research/HMFMeadowVegetationData/2017VegetationData/GroundCover/GCVegan/field1gc.csv")
View(field1gc)
library(vegan)
library(vegan)
diversity(field1gc[-1], index="shannon")
View(field1gc)
diversity(field1gc, index="shannon")
diversity(field1gc[-1], index="shannon")
F1.GC.2017 <- read.csv("~/Rutgers/Research/HMFMeadowVegetationData/2017VegetationData/PercentCover/Percent.Cover.Merge/F1.GC.2017.csv")
View(F1.GC.2017)
F1.Shrub.2017 <- read.csv("~/Rutgers/Research/HMFMeadowVegetationData/2017VegetationData/PercentCover/Percent.Cover.Merge/F1.Shrub.2017.csv")
View(F1.Shrub.2017)
F1.Canopy.2017 <- read.csv("~/Rutgers/Research/HMFMeadowVegetationData/2017VegetationData/PercentCover/Percent.Cover.Merge/F1.Canopy.2017.csv")
View(F1.Canopy.2017)
#import F1.GC.2017, F1.Shrub.2017, F1.Canopy.2017 to be merged to get Percent Cover
?merge
merge(F1.GC.2017,F1.Shrub.2017,F1.Canopy.2017)
rm(F1.Canopy.2017,F1.GC.2017,F1.Shrub.2017)
F2.GC.2017 <- read.csv("~/Rutgers/Research/HMFMeadowVegetationData/2017VegetationData/PercentCover/Percent.Cover.Merge/F2.GC.2017.csv", header=FALSE)
View(F2.GC.2017)
F2.Shrub.2017 <- read.csv("~/Rutgers/Research/HMFMeadowVegetationData/2017VegetationData/PercentCover/Percent.Cover.Merge/F2.Shrub.2017.csv", header=FALSE)
View(F2.Shrub.2017)
merge(F2.GC.2017,F2.Shrub.2017)
mergedGC.Shrub.F2 <- merge(F2.GC.2017,F2.Shrub.2017)
View(mergedGC.Shrub.F2)
rm(F2.GC.2017,F2.Shrub.2017,mergedGC.Shrub.F2)
F2.GC.2017 <- read.delim("~/Rutgers/Research/HMFMeadowVegetationData/2017VegetationData/PercentCover/Percent.Cover.Merge/F2.GC.2017.csv")
View(F2.GC.2017)
F2.Shrub.2017 <- read.delim("~/Rutgers/Research/HMFMeadowVegetationData/2017VegetationData/PercentCover/Percent.Cover.Merge/F2.Shrub.2017.csv")
View(F2.Shrub.2017)
mergedGC.Shrub.F2 <- merge(F2.GC.2017,F2.Shrub.2017, by = c('Species'))
View(mergedGC.Shrub.F2)
library(vegan)
F1.Percent.Cover.2017 <- read.csv("~/Rutgers/Research/HMFMeadowVegetationData/2017VegetationData/PercentCoverVegan/F1.Percent.Cover.2017.csv")
View(F1.Percent.Cover.2017)
#species richness of subplots in field 1 by summing up nonzeros in each row but not including the first column with plot names
subplotrichnessf1 <- apply(F1.Percent.Cover.2017[,-1]>0 ,1 ,sum)
View(F1.Percent.Cover.2017)
subplotrichnessf1
library(vegan)
setwed("/Users/bpisano/Rutgers/Research/HMFMeadowVegetationData/2017VegetationData/PercentCoverVegan")
F2.Percent.Cover.2017 <- read.delim("~/Rutgers/Research/HMFMeadowVegetationData/2017VegetationData/PercentCoverVegan/F2.Percent.Cover.2017.csv")
View(F2.Percent.Cover.2017)
library(vegan)
F1.Percent.Cover.2017 <- read.delim("~/Rutgers/Research/HMFMeadowVegetationData/2017VegetationData/PercentCoverVegan/F1.Percent.Cover.2017.csv")
View(F1.Percent.Cover.2017)
#species richness of subplots in field 1 by summing up nonzeros in each row but not including the first column with plot names
subplotrichnessf1 <- apply(F1.Percent.Cover.2017[,-1]>0 ,1 ,sum)
#add species richness of subplots in field 1 to dataframe F1.Percent.Cover.2017
F1.Percent.Cover.2017$richnessf1 <- subplotrichnessf1
#shannon diversity of subplots in field 1
subplotdiversityf1 <- diversity(F1.Percent.Cover.2017[-1], index="shannon")
#add subplotdiversityf1 as a column to data frame F1.Percent.Cover.2017
F1.Percent.Cover.2017$diversityf1 <- subplotdiversityf1
#write F1.Percent.Cover.2017 as a csv
write.csv(F1.Percent.Cover.2017, file="F1.Percent.Cover.Richness.Diversity.2017.csv")
#species richness of subplots in field 2 by summing up nonzeros in each row but not including the first column with plot names
subplotrichnessf2 <- apply(F2.Percent.Cover.2017[,-1]>0 ,1 ,sum)
#add species richness of subplots in field 2 to dataframe F2.Percent.Cover.2017
F2.Percent.Cover.2017$richnessf2 <- subplotrichnessf2
#shannon diversity of subplots in field 2
subplotdiversityf2 <- diversity(F2.Percent.Cover.2017[-1], index="shannon")
#add subplotdiversityf2 as a column to data frame F2.Percent.Cover.2017
F2.Percent.Cover.2017$diversityf2 <- subplotdiversityf2
#write F2.Percent.Cover.2017 as a csv
write.csv(F2.Percent.Cover.2017, file="F2.Percent.Cover.Richness.Diversity.2017.csv")
#write F1.Percent.Cover.2017 as a csv
write.csv(F1.Percent.Cover.2017, file="F1.Percent.Cover.Richness.Diversity.2017.csv")
#species richness of subplots in field 1 by summing up nonzeros in each row but not including the first column with plot names
subplotrichnessf1 <- apply(F1.Percent.Cover.2017[,-1]>0 ,1 ,sum)
#add species richness of subplots in field 1 to dataframe F1.Percent.Cover.2017
F1.Percent.Cover.2017$richnessf1 <- subplotrichnessf1
#shannon diversity of subplots in field 1
subplotdiversityf1 <- diversity(F1.Percent.Cover.2017[-1], index="shannon")
#add subplotdiversityf1 as a column to data frame F1.Percent.Cover.2017
F1.Percent.Cover.2017$diversityf1 <- subplotdiversityf1
#write F1.Percent.Cover.2017 as a csv
write.csv(F1.Percent.Cover.2017, file="F1.Percent.Cover.Richness.Diversity.2017.csv")
?lmerTest
??lmerTest
setwd("~/FS.JV/GitHub/FIAPI/PinelandsQuery")
